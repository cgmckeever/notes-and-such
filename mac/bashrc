## Mac zsh
export BASH_SILENCE_DEPRECATION_WARNING=1
export TF_VAR_rd_public_key_file=~/.ssh/id_rsa.pub
## GPG signing
export GPG_TTY=`tty`

# GO
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOROOT/bin
export GOSUMDB=off

alias resource='source ~/.bashrc'
alias dockerwipe='docker rmi -f $(docker images -a -q) && docker system prune -a'

alias gitprune='git remote prune origin'

alias ecr-gov="aws ecr get-login-password --region us-gov-west-1 \
    --profile=gov-root | docker login --username AWS \
    --password-stdin 045710658753.dkr.ecr.us-gov-west-1.amazonaws.com"

alias ecr-aws="aws ecr get-login-password \
    --region us-east-1 | docker login --username AWS \
    --password-stdin 230579579650.dkr.ecr.us-east-1.amazonaws.com"

GRAY='\[\033[1;30m\]'
RED='\[\033[1;31m\]'
GREEN='\[\033[1;32m\]'
YELLOW='\[\033[1;33m\]'
PURPLE='\[\033[1;35m\]'
WHITE='\[\033[1;37m\]'
BLUE='\[\033[1;34m\]'
CYAN='\[\033[1;36m\]'
NC='\[\033[0m\]'


export PATH="/usr/local/opt/terraform@0.13/bin:$PATH"

# BREW (is this needed)
if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi

## Git branch in prompt.
# sudo find / -type f -name "git-completion.bash"
# brew install bash-completion (if not installed)
# sudo cp /current/path/to/your/git-completion.bash /usr/local/etc/bash_completion.d/git-completion.bash
#
source /usr/local/etc/bash_completion.d/git-completion.bash

REPO=""
repo() {
    REPO=$(basename $(git remote get-url origin 2> /dev/null) 2> /dev/null | sed -e 's/\.git//')
}

BRANCH=""
branch() {
   repo
   BRANCH=""
    if [ ! -z $REPO ]; then
        BRANCH=$(git symbolic-ref --short -q HEAD)
    fi
}

VENV=""
venv() {
    if [[ "$VIRTUAL_ENV" != "" ]]; then
        VENV=$(basename $VIRTUAL_ENV)
    fi
}

prompt_command() {
    branch
    venv

    repo_display=""
    branch_display=""
    if [ ! -z $REPO ]; then
        repo_display=" ${GREEN}${REPO}"
        if [ -z $BRANCH ]; then
            branch_display=" ${RED}[detached]"
        else
            branch_display=" (${BRANCH})"
        fi
    fi

    venv_display=""
    if [ ! -z $VENV ]; then
        venv_display="[${VENV}] "
    fi

    DIR="${CYAN}\W/"
    PS1="${venv_display}\u@\h ${DIR}${repo_display}${branch_display}> ${WHITE}"
}

export PROMPT=$PS1
PROMPT_COMMAND=prompt_command
